@inherits Fluxor.Blazor.Web.Components.FluxorComponent
<Bar Breakpoint="Breakpoint.Tablet" NavigationBreakpoint="Breakpoint.Tablet" ThemeContrast="ThemeContrast.Light"
     Mode="BarMode.VerticalInline" CollapseMode="BarCollapseMode.Hide" VisibleChanged="MenuVisibilityChanged">
    <BarToggler Mode="BarTogglerMode.Popout"  />
    <BarBrand>
        <BarItem>
            <BarLink To="https://www.traccaradora.com" Target="Target.Blank">
                <BarIcon IconName="customIcon" />
            </BarLink>
        </BarItem>
    </BarBrand>
    <BarMenu>
        <BarStart>
            <BarItem>
                <BarLink To="/Dashboard">
                    <BarIcon IconName="IconName.Dashboard" />
                    Dashboard
                </BarLink>
            </BarItem>
            <BarItem>
                <BarDropdown>
                    <BarDropdownToggle>
                        <BarIcon IconName="IconName.Wrench" />
                        Einstellungen
                    </BarDropdownToggle>
                    <BarDropdownMenu>
                        <BarDropdownItem To="/devices">
                            Geräte
                        </BarDropdownItem>
                    </BarDropdownMenu>
                </BarDropdown>
            </BarItem>
        </BarStart>
        <BarEnd>
            <BarLabel>
                @Version
            </BarLabel>
        </BarEnd>
    </BarMenu>
</Bar>

@code{
    @inject Fluxor.IDispatcher Dispatcher;
    private string Version = "";
    RenderFragment customIcon =@<img src="/img/logo_transparent_low.png" style="width:50px;" />;

    protected override void OnInitialized()
    {
        base.OnInitialized();
        var attr = typeof(App).Assembly.GetCustomAttributes(true).Where(x => x.GetType() == typeof(System.Reflection.AssemblyInformationalVersionAttribute)).FirstOrDefault();
        if (attr != null)
        {
            Version = ((System.Reflection.AssemblyInformationalVersionAttribute)attr).InformationalVersion;
        }
    }

    private void MenuVisibilityChanged(bool visible)
    {
        Dispatcher.Dispatch(new Traccaradora.Web.Store.Ui.SetMainMenuVisibilityAction() { Visible = visible });
    }
}